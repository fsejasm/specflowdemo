// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace SpecflowAndCodedUI.UI.GeneralUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public partial class GeneralUIMap
    {
        
        /// <summary>
        /// ClickClear
        /// </summary>
        public void ClickClear()
        {
            #region Variable Declarations
            WinButton uIClearButton = this.UICalculatorWindow.UIItemWindow.UIClearButton;
            #endregion

            // Click 'Clear' button
            Mouse.Click(uIClearButton, new Point(20, 8));
        }
        
        /// <summary>
        /// CloseCalculator
        /// </summary>
        public void CloseCalculator()
        {
            #region Variable Declarations
            WinButton uICloseButton = this.UICalculatorWindow.UICalculatorTitleBar.UICloseButton;
            #endregion

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(24, 12));
        }
        
        /// <summary>
        /// LaunchCalculator - Use 'LaunchCalculatorParams' to pass parameters into this method.
        /// </summary>
        public void LaunchCalculator()
        {

            // Launch '%SystemRoot%\System32\calc.exe'
            ApplicationUnderTest calcApplication = ApplicationUnderTest.Launch(this.LaunchCalculatorParams.ExePath, this.LaunchCalculatorParams.AlternateExePath);
        }
        
        #region Properties
        public virtual LaunchCalculatorParams LaunchCalculatorParams
        {
            get
            {
                if ((this.mLaunchCalculatorParams == null))
                {
                    this.mLaunchCalculatorParams = new LaunchCalculatorParams();
                }
                return this.mLaunchCalculatorParams;
            }
        }
        
        public UICalculatorWindow UICalculatorWindow
        {
            get
            {
                if ((this.mUICalculatorWindow == null))
                {
                    this.mUICalculatorWindow = new UICalculatorWindow();
                }
                return this.mUICalculatorWindow;
            }
        }
        #endregion
        
        #region Fields
        private LaunchCalculatorParams mLaunchCalculatorParams;
        
        private UICalculatorWindow mUICalculatorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LaunchCalculator'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class LaunchCalculatorParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%SystemRoot%\System32\calc.exe'
        /// </summary>
        public string ExePath = "C:\\Windows\\System32\\calc.exe";
        
        /// <summary>
        /// Launch '%SystemRoot%\System32\calc.exe'
        /// </summary>
        public string AlternateExePath = "%SystemRoot%\\System32\\calc.exe";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICalculatorWindow : WinWindow
    {
        
        public UICalculatorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Calculator";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CalcFrame";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public UICalculatorTitleBar UICalculatorTitleBar
        {
            get
            {
                if ((this.mUICalculatorTitleBar == null))
                {
                    this.mUICalculatorTitleBar = new UICalculatorTitleBar(this);
                }
                return this.mUICalculatorTitleBar;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UICalculatorTitleBar mUICalculatorTitleBar;
        
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICalculatorTitleBar : WinTitleBar
    {
        
        public UICalculatorTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.SearchConfigurations.Remove(SearchConfiguration.VisibleOnly);
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "81";
            this.WindowTitles.Add("Calculator");
            #endregion
        }
        
        #region Properties
        public WinButton UIClearButton
        {
            get
            {
                if ((this.mUIClearButton == null))
                {
                    this.mUIClearButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIClearButton.SearchProperties[WinButton.PropertyNames.Name] = "Clear";
                    this.mUIClearButton.WindowTitles.Add("Calculator");
                    #endregion
                }
                return this.mUIClearButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIClearButton;
        #endregion
    }
}
